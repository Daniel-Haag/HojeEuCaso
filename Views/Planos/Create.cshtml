@model Plano
@{
    ViewData["Title"] = "Cadastro Planos";
}
<style>
    fade-in-out {
        animation: fadeInOut 3s ease-in-out;
    }

    @@keyframes fadeInOut {
        0% {
            opacity: 0;
        }

        10% {
            opacity: 1;
        }

        90% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }

    .error-fade-in-out {
        animation: errorFadeInOut 3s ease-in-out;
    }

    @@keyframes errorFadeInOut {
        0% {
            opacity: 0;
        }

        10% {
            opacity: 1;
        }

        90% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }
</style>
<h5 style="margin-left: 11%">@ViewData["Title"]</h5>
<hr />
<div class="container" style="margin-left: 7%">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success">
                            @TempData["SuccessMessage"]
                        </div>
                    }
                    else if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">
                            @TempData["ErrorMessage"]
                        </div>
                    }
                    <form asp-action="Create">
                        <div class="form-group">
                            <label asp-for="Titulo">Título</label>
                            <input asp-for="Titulo" class="form-control" />
                            <span asp-validation-for="Titulo" class="text-danger"></span>

                            <label asp-for="Preco">Preço</label>
                            <input type="text" asp-for="Preco" class="form-control" id="precoInput" oninput="RetiraPonto()" />
                            <span asp-validation-for="Preco" class="text-danger"></span>

                            <label asp-for="PeriodoRenovacao">Periodo de Renovação</label>
                            <select asp-for="PeriodoRenovacao" class="form-control">
                                <option value="Semanal">Semanal</option>
                                <option value="A Cada Duas Semanas">A Cada Duas Semanas</option>
                                <option value="Mensal">Mensal</option>
                                <option value="A cada 3 Meses">A cada 3 Meses</option>
                                <option value="Semestral">Semestral</option>
                                <option value="Anual">Anual</option>
                            </select>
                            <span asp-validation-for="PeriodoRenovacao" class="text-danger"></span>
                        </div>
                        <!-- Adicionar outros campos relevantes aqui, se necessário -->
                        <hr />
                        <button type="submit" class="btn btn-primary">Salvar</button>
                        <a asp-action="Index" class="btn btn-secondary">Voltar</a>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        // Verifica se há uma mensagem de sucesso
        var successMessage = $(".alert.alert-success");

        // Se houver uma mensagem de sucesso, iniciar a animação de fade-in e depois fade-out
        if (successMessage.length > 0) {
            successMessage.addClass("fade-in-out");
            setTimeout(function () {
                successMessage.removeClass("fade-in-out").fadeOut(500);
            }, 3000); // 3000 milissegundos (3 segundos)
        }

        // Verifica se há uma mensagem de erro
        var errorMessage = $(".alert.alert-danger");

        // Se houver uma mensagem de erro, iniciar a animação de fade-in e depois fade-out
        if (errorMessage.length > 0) {
            errorMessage.addClass("error-fade-in-out");
            setTimeout(function () {
                errorMessage.removeClass("error-fade-in-out").fadeOut(500);
            }, 3000); // 3000 milissegundos (3 segundos)
        }

        document.addEventListener("DOMContentLoaded", function () {
            // Selecione o campo de preço
            var precoInput = document.getElementById("precoInput");

            // Adicione um ouvinte de evento para formatar o valor quando o usuário sair do campo
            precoInput.addEventListener("blur", function () {
                // Obtenha o valor atual do campo
                var precoValue = precoInput.value;

                // Verifique se o valor é um número válido
                if (!isNaN(precoValue)) {
                    // Formate o valor como moeda (reais e centavos)
                    var formatter = new Intl.NumberFormat('pt-BR', {
                        style: 'currency',
                        currency: 'BRL'
                    });
                    precoInput.value = formatter.format(precoValue);
                }
            });
        });
    });

    function RetiraPonto() {
        
        var precoInput = document.getElementById("precoInput");

        var precoValue = precoInput.value;

        if (!isNaN(precoValue)) {
            var precoFormatado = precoValue.replace(/\./g, ',');

            precoInput.value = precoFormatado;
        }
    }
</script>